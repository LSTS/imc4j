allprojects {
    version = '1.0.6'
    repositories {
        mavenCentral()
    }
    apply plugin: 'maven-publish'
    apply plugin: 'java'
}

subprojects {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'pt.lsts.imc4j'
                from components.java
            }
        }
    }
}

clean {
    delete fileTree(dir: 'dist' , include: '**/*.jar')
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
}

def createLauncher(proj, String launcherName, String destFolder, String jarName, String classBackseat,
                      boolean synckClock, boolean runAsHttpServer, String classHttpServer, String httpPort,
                      boolean httpConfigHotReload) {
    configure(proj) {
        proj.tasks.create("launcher${launcherName.capitalize()}", Copy) {
            description = "Generate $name launcher"
            group = 'Distribution'
            def workTmpDirectory = "${rootDir}/${destFolder}"

            outputs.upToDateWhen { false }

            from("${rootProject.projectDir}/stubs") {
                include 'launcher.stub'
                rename ".*", "${launcherName.uncapitalize()}.sh"

                filter { it.replaceAll("@JARNAME@", "${jarName}") }
                filter { it.replaceAll("@CLASS_BACKSEAT@", "${classBackseat}") }
                filter { it.replaceAll("@SYNC_CLOCK@", synckClock ? "" : "#") }
                filter { it.replaceAll("@RUN_AS_HTTP_SERVER@", runAsHttpServer ? "" : "#") }
                filter { it.replaceAll("@CLASS_SERVER@", "${classHttpServer}") }
                filter { it.replaceAll("@HTTP_PORT@", "${httpPort}") }
                filter { it.replaceAll("@HOT_CONFIG@", httpConfigHotReload ? "" : "#") }
            }
            into workTmpDirectory
        }
    }
}