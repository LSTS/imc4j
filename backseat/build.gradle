
apply plugin: 'application'

mainClassName = 'pt.lsts.autonomy.soi.SoiExecutive'

dependencies {
    compile project(':endurance')
    compile 'org.nanohttpd:nanohttpd:2.3.1'
    compile 'org.knowm.xchart:xchart:3.6.2'
}

def jarTask(jarName, destFolder, mainClass) {
    return tasks.create(jarName, Jar) {
        group 'Distribution'
        description "Generate ${jarName}.jar"

        from {configurations.compile.collect { it.isDirectory() ? it : zipTree(it).matching {
            exclude "module-info.class"
        } } }
        with jar

        manifest {
            attributes 'Main-Class': mainClass
        }

        archiveName "${jarName}.jar"
        destinationDir (new java.io.File("$rootDir/$destFolder"))
    }
}


jarTask('SoiExecutive', '/dist/soi', 'pt.lsts.autonomy.soi.SoiExecutive')
createLauncher(project, 'soi', '/dist/soi', SoiExecutive.archiveFileName.get(),
        'pt.lsts.autonomy.soi.SoiExecutive', true,
        false, 'pt.lsts.httpd.BackSeatServer', '8091', false)
SoiExecutive.dependsOn launcherSoi

jarTask('DripExecutive', '/dist/drip', 'pt.lsts.backseat.drip.DripExecutive')
createLauncher(project, 'drip', '/dist/drip', DripExecutive.archiveFileName.get(),
        'pt.lsts.backseat.drip.DripExecutive', false,
        false, 'pt.lsts.httpd.BackSeatServer', '8092', false)
DripExecutive.dependsOn launcherDrip
createLauncher(project, 'drip-http', '/dist/drip', DripExecutive.archiveFileName.get(),
        'pt.lsts.backseat.drip.RiverPlumeTracker', false,
        true, 'pt.lsts.httpd.BackSeatServer', '80', true)
DripExecutive.dependsOn launcherDriphttp

jarTask('ArpaoExec', '/dist/arpao', 'pt.lsts.autonomy.ArpaoExecutive')
createLauncher(project, 'arpao', '/dist/arpao', ArpaoExec.archiveFileName.get(),
        'pt.lsts.autonomy.ArpaoExecutive', true,
        true, 'pt.lsts.httpd.BackSeatServer', '8088', false)
ArpaoExec.dependsOn launcherArpao

jarTask('Distress', '/dist/distress', 'pt.lsts.backseat.distress.DistressSurvey')
createLauncher(project, 'distress', '/dist/distress', Distress.archiveFileName.get(),
        'pt.lsts.backseat.distress.DistressSurvey', true,
        false, 'pt.lsts.httpd.BackSeatServer', '8090', false)
Distress.dependsOn launcherDistress

task execJars {
    group 'Distribution'
    description "Generate Executives Jar archives"
    dependsOn = ['SoiExecutive', 'DripExecutive', 'ArpaoExec', 'Distress']
}